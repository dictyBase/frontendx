name: continuous integration
on:
  push:
    branches:
      - develop
jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: set up node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: check out code
        uses: actions/checkout@v4
      - name: install
        run: yarn install --ignore-engines
      - name: unit tests
        run: yarn coverage
      - name: upload test coverage to codecov
        uses: codecov/codecov-action@v4
        with: 
          token: ${{ secrets.CODECOV }}
  call-frontpage-deploy:
    needs: test
    uses: dictyBase/workflows/.github/workflows/composite-deploy.yaml@develop
    secrets: inherit
    with:
      app: frontpage
      repository: ${{ github.repository }}
      ref: ${{ github.ref_name }}
      docker_image: dicty-frontpage
      dockerfile: "docker/Dockerfile.frontpage"
      cluster: ${{ vars.DEV_STAGING_CLUSTER }}
      cluster_state_storage: ${{ vars.DEV_STAGING_KOPS_STATE_STORAGE }}
      project: frontend_application
      application_type: frontend
  call-stockcenter-deploy:
    needs: call-frontpage-deploy
    uses: dictyBase/workflows/.github/workflows/composite-deploy.yaml@develop
    secrets: inherit
    with:
      app: stockcenter
      repository: ${{ github.repository }}
      ref: ${{ github.ref_name }}
      docker_image: stock-center
      dockerfile: docker/Dockerfile.stock-center
      cluster: ${{ vars.DEV_STAGING_CLUSTER }}
      cluster_state_storage: ${{ vars.DEV_STAGING_KOPS_STATE_STORAGE }}
      project: frontend_application
      application_type: frontend
  call-publication-deploy:
    needs: call-stockcenter-deploy
    uses: dictyBase/workflows/.github/workflows/composite-deploy.yaml@develop
    secrets: inherit
    with:
      app: publication
      repository: ${{ github.repository }}
      ref: ${{ github.ref_name }}
      dockerfile: docker/Dockerfile.publication
      docker_image: publication
      cluster: ${{ vars.DEV_STAGING_CLUSTER }}
      cluster_state_storage: ${{ vars.DEV_STAGING_KOPS_STATE_STORAGE }}
      project: frontend_application
      application_type: frontend
