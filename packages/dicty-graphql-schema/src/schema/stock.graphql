interface Stock {
  id: ID!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  createdBy: User!
  updatedBy: User!
  summary: String
  editableSummary: String
  depositor: User!
  genes: [Gene!]
  dbxrefs: [String!]
  publications: [Publication!]
  inStock: Boolean!
}

type Strain implements Stock {
  id: ID!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  createdBy: User!
  updatedBy: User!
  summary: String
  editableSummary: String
  depositor: User!
  genes: [Gene!]
  dbxrefs: [String!]
  publications: [Publication!]
  # from strainProperties
  systematicName: String!
  label: String!
  species: String!
  plasmid: String # update to Plasmid later?
  parent: Strain
  names: [String!]
  # new additions
  inStock: Boolean!
  phenotypes: [Phenotype!]
  geneticModification: String
  mutagenesisMethod: String
  characteristics: [String!]
  genotypes: [String!]
}

type Plasmid implements Stock {
  id: ID!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  createdBy: User!
  updatedBy: User!
  summary: String # same as description field?
  editableSummary: String
  depositor: User!
  genes: [Gene!]
  dbxrefs: [String!]
  publications: [Publication!]
  name: String!
  # from plasmidProperties
  imageMap: String
  sequence: String
  # new additions
  inStock: Boolean!
  keywords: [String!]
  genbankAccession: String
}

type Phenotype {
  # eslint-disable-next-line @graphql-eslint/no-typename-prefix
  phenotype: String!
  note: String
  assay: String
  environment: String
  publication: Publication
}

type StrainListWithCursor {
  strains: [Strain!]!
  nextCursor: Int!
  previousCursor: Int!
  limit: Int
  totalCount: Int!
}

type PlasmidListWithCursor {
  plasmids: [Plasmid!]!
  nextCursor: Int!
  previousCursor: Int!
  limit: Int
  totalCount: Int!
}

type DeleteStock {
  id: ID!
  success: Boolean!
}

input CreateStrainInput {
  createdBy: String!
  updatedBy: String!
  summary: String
  editableSummary: String
  depositor: String
  genes: [String!]
  dbxrefs: [String!]
  publications: [String!]
  # from strainProperties
  systematicName: String!
  label: String!
  species: String!
  plasmid: String
  parent: String
  names: [String!]
  # new additions
  inStock: Boolean!
  phenotypes: [String!]
  geneticModification: String
  mutagenesisMethod: String
  characteristics: [String!]
  genotypes: [String!]
}

input CreatePlasmidInput {
  createdBy: String!
  updatedBy: String!
  summary: String
  editableSummary: String
  depositor: String
  genes: [String!]
  dbxrefs: [String!]
  publications: [String!]
  name: String!
  # from plasmidProperties
  imageMap: String
  sequence: String
  # new additions
  inStock: Boolean!
  keywords: [String!]
  genbankAccession: String
}

input UpdateStrainInput {
  updatedBy: String!
  summary: String
  editableSummary: String
  depositor: String
  genes: [String!]
  dbxrefs: [String!]
  publications: [String!]
  # from strainProperties
  systematicName: String
  label: String
  species: String
  plasmid: String
  parent: String
  names: [String!]
  # new additions
  inStock: Boolean
  phenotypes: [String!]
  geneticModification: String
  mutagenesisMethod: String
  characteristics: [String!]
  genotypes: [String!]
}

input UpdatePlasmidInput {
  updatedBy: String!
  summary: String
  editableSummary: String
  depositor: String
  genes: [String!]
  dbxrefs: [String!]
  publications: [String!]
  name: String
  # from plasmidProperties
  imageMap: String
  sequence: String
  # new additions
  inStock: Boolean
  keywords: [String!]
  genbankAccession: String
}

enum StrainType {
  ALL
  REGULAR
  GWDI
  BACTERIAL
}

input StrainListFilter {
  label: String
  summary: String
  id: ID
  inStock: Boolean
  strainType: StrainType!
}
