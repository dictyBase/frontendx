name: Node CI
on:
  push:
    branches:
      - staging
jobs:
  test:
    runs-on: ubuntu-18.04
    steps:
      - name: set up node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: check out code
        uses: actions/checkout@v1
      - name: npm install and test
        run: |
          mv src/common/utils/clientConfig.sample.ts src/common/utils/clientConfig.ts
          npm ci
          npm test -- --coverage
        env:
          CI: true
      - name: upload coverage to codecov
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  build:
    needs: test
    runs-on: ubuntu-18.04
    steps:
      - name: set up node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: check out code
        uses: actions/checkout@v1
      - name: build staging docker image
        run: docker build -t dictybase/publication:staging-$(git rev-parse --short HEAD) -f docker/staging/Dockerfile .
      - name: login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: push staging image to docker hub
        run: docker push dictybase/publication:staging-$(git rev-parse --short HEAD)
  audit:
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: Audit live URL
        uses: docker://dictybase/lighthouse-audit:latest
        with:
          url: "https://eric.dictybase.dev/publication/26088819"
      - name: Upload results as an artifact
        uses: actions/upload-artifact@master
        with:
          name: report
          path: "./report"
  snapshots:
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: set up node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: check out code
        uses: actions/checkout@v1
      - name: generate snapshots
        run: |
          npm i nightwatch chromedriver
          npm run nightwatch
      - name: upload snapshots as artifact
        uses: actions/upload-artifact@master
        with:
          name: snapshots
          path: "./nightwatch/reports"
      - name: upload snapshots to minio
        uses: docker://dictybase/snapshot-upload:app
        with:
          args: "--folder ./nightwatch/reports"
        env:
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
