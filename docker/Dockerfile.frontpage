FROM node:lts-alpine3.18 AS base

FROM base AS builder
RUN apk add --no-cache libc6-compat
RUN apk update
# Set working directory
WORKDIR /app
RUN yarn global add turbo
COPY . .
RUN mv /app/apps/dicty-frontpage/.env.development /app/apps/dicty-frontpage/.env.production
RUN turbo prune --scope=dicty-frontpage --docker

# Add lockfile and package.json's of isolated subworkspace
FROM base AS installer
RUN apk add --no-cache libc6-compat
RUN apk update
WORKDIR /app

# First install the dependencies (as they change less often)
COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/yarn.lock ./yarn.lock
RUN yarn install --ignore-engines --network-timeout 1000000 

# Build the project
COPY --from=builder /app/out/full/ .
RUN yarn turbo run build --filter=dicty-frontpage


FROM golang:1.20.7-alpine3.18

RUN apk update \
  && apk add git \
  && git clone https://github.com/dictyBase/static-server.git \
  && cd static-server \
  && go build -o /usr/local/bin/app 
WORKDIR /www
COPY --from=installer /app/apps/dicty-frontpage/dist ./
ENV PORT 3000
EXPOSE 3000
ENTRYPOINT ["/usr/local/bin/app", "run", "-f", "/www", "-p", "3000", "--sf", "/assets"]
